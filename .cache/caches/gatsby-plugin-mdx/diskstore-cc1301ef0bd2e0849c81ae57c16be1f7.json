{"expireTime":9007200902143333000,"key":"gatsby-plugin-mdx-entire-payload-d695d9ac2912a86b70eda5fe5d68a254-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import { Asset, Link } from 'components';\nimport files from './files.png';\nimport mountain from './Mountain_Top.jpg';","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":3,"column":43,"offset":117},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"I was listening to an episode of ","position":{"start":{"line":5,"column":1,"offset":119},"end":{"line":5,"column":34,"offset":152},"indent":[]}},{"type":"link","title":null,"url":"https://designdetails.fm/episodes/113490","children":[{"type":"text","value":"Design Details podcast","position":{"start":{"line":5,"column":35,"offset":153},"end":{"line":5,"column":57,"offset":175},"indent":[]}}],"position":{"start":{"line":5,"column":34,"offset":152},"end":{"line":5,"column":100,"offset":218},"indent":[]}},{"type":"text","value":" where ","position":{"start":{"line":5,"column":100,"offset":218},"end":{"line":5,"column":107,"offset":225},"indent":[]}},{"type":"link","title":null,"url":"https://twitter.com/brian_lovin","children":[{"type":"text","value":"Brian","position":{"start":{"line":5,"column":108,"offset":226},"end":{"line":5,"column":113,"offset":231},"indent":[]}}],"position":{"start":{"line":5,"column":107,"offset":225},"end":{"line":5,"column":147,"offset":265},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":5,"column":147,"offset":265},"end":{"line":5,"column":152,"offset":270},"indent":[]}},{"type":"link","title":null,"url":"https://twitter.com/marshallbock","children":[{"type":"text","value":"Marshall","position":{"start":{"line":5,"column":153,"offset":271},"end":{"line":5,"column":161,"offset":279},"indent":[]}}],"position":{"start":{"line":5,"column":152,"offset":270},"end":{"line":5,"column":196,"offset":314},"indent":[]}},{"type":"text","value":" interviewed ","position":{"start":{"line":5,"column":196,"offset":314},"end":{"line":5,"column":209,"offset":327},"indent":[]}},{"type":"link","title":null,"url":"https://twitter.com/rauchg","children":[{"type":"text","value":"Guillermo Rauch","position":{"start":{"line":5,"column":210,"offset":328},"end":{"line":5,"column":225,"offset":343},"indent":[]}}],"position":{"start":{"line":5,"column":209,"offset":327},"end":{"line":5,"column":254,"offset":372},"indent":[]}},{"type":"text","value":". They were talking about an idea of incremental correctness and I had to stop what I was doing and just listen. I've been intimately familiar with this concept for years now but never had such a clear way of articulating it.","position":{"start":{"line":5,"column":254,"offset":372},"end":{"line":5,"column":479,"offset":597},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":119},"end":{"line":5,"column":479,"offset":597},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In short, ","position":{"start":{"line":7,"column":1,"offset":599},"end":{"line":7,"column":11,"offset":609},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Incremental Correctness","position":{"start":{"line":7,"column":12,"offset":610},"end":{"line":7,"column":35,"offset":633},"indent":[]}}],"position":{"start":{"line":7,"column":11,"offset":609},"end":{"line":7,"column":36,"offset":634},"indent":[]}},{"type":"text","value":" is not the pursuit of finality, but to be always improving. It's against proposing a major redesign (hello design portfolios), instead optimizing what you have. Focus on understanding the space you're in, researching problems, experimenting, validating, and shipping small features quickly. When we learn about new problems, we pivot and fix them. Accepting that nothing is ever finished somehow is liberating. It allows you to celebrate each and every win when you make it.","position":{"start":{"line":7,"column":36,"offset":634},"end":{"line":7,"column":511,"offset":1109},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":599},"end":{"line":7,"column":511,"offset":1109},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"My wife and I do this in our personal lives. When we're stuck on a project we tell ourselves \"what is the next right step?\" and do that. She just spent a few months renovating our garage into a beautiful workspace. That project had her (and occasionally me) putting up drywall, painting, running electricity lines, painting, sealing, realigning the garage door, did I say painting? At times it felt like too big of a project, and we almost hired someone to finish, but she kept taking the next right step. We'll probably forever find little things to improve, change, and fix, but for now it's at a place where we're happy and can really enjoy the improved space she created.","position":{"start":{"line":9,"column":1,"offset":1111},"end":{"line":9,"column":676,"offset":1786},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":1111},"end":{"line":9,"column":676,"offset":1786},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I've also used a metaphor of climbing a mountain to describe this concept. You know the goal ","position":{"start":{"line":11,"column":1,"offset":1788},"end":{"line":11,"column":94,"offset":1881},"indent":[]}},{"type":"text","value":"—","position":{"start":{"line":11,"column":94,"offset":1881},"end":{"line":11,"column":101,"offset":1888},"indent":[]}},{"type":"text","value":" it's get to the top ","position":{"start":{"line":11,"column":101,"offset":1888},"end":{"line":11,"column":122,"offset":1909},"indent":[]}},{"type":"text","value":"—","position":{"start":{"line":11,"column":122,"offset":1909},"end":{"line":11,"column":129,"offset":1916},"indent":[]}},{"type":"text","value":" but how would you do that? I'm not much of an outdoorsman, but charging up the mountain in a straight line is probably a very bad idea. Instead you go a little slower. You chart a course to the next safest point to stop and get your bearings. Then chart your next point. And again. And again, until you're at the top.","position":{"start":{"line":11,"column":129,"offset":1916},"end":{"line":11,"column":447,"offset":2234},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":1788},"end":{"line":11,"column":447,"offset":2234},"indent":[]}},{"type":"jsx","value":"<Asset src={mountain} alt=\"a person climbing a mountain\" caption={<span>Illustration by <Link href=\"//marissaluca.com\">Marissa Felten</Link></span>} />","position":{"start":{"line":13,"column":1,"offset":2236},"end":{"line":13,"column":152,"offset":2387},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"My work in design systems has taken me down a path of incremental improvement as well. A lot of projects have us roaming around in the dark finding the right balance of standardization and customization. We have components that are used thousands of times across multiple enterprise apps, so completely redoing a component can be incredibly painful for the teams using it to transition to. Deprecation and removal is an incredibly taxing exercise and we need to be cautious about that. So we plan, design, and build features that are the smallest most complete amount of correct we can. As our teams start using them, we learn more and improve them.","position":{"start":{"line":15,"column":1,"offset":2389},"end":{"line":15,"column":650,"offset":3038},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":2389},"end":{"line":15,"column":650,"offset":3038},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":17,"column":1,"offset":3040},"end":{"line":17,"column":4,"offset":3043},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I really liked what Brian called out on his ","position":{"start":{"line":19,"column":1,"offset":3045},"end":{"line":19,"column":45,"offset":3089},"indent":[]}},{"type":"link","title":null,"url":"https://brianlovin.com/overthought/incrementally-correct-personal-websites","children":[{"type":"text","value":"website","position":{"start":{"line":19,"column":46,"offset":3090},"end":{"line":19,"column":53,"offset":3097},"indent":[]}}],"position":{"start":{"line":19,"column":45,"offset":3089},"end":{"line":19,"column":130,"offset":3174},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":19,"column":130,"offset":3174},"end":{"line":19,"column":131,"offset":3175},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":3045},"end":{"line":19,"column":131,"offset":3175},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"...our tools don't afford incrementally-correct processes.","position":{"start":{"line":20,"column":3,"offset":3178},"end":{"line":20,"column":61,"offset":3236},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":3178},"end":{"line":20,"column":61,"offset":3236},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":3176},"end":{"line":20,"column":61,"offset":3236},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just look at all the jokes about design file names and you'll immediately see that our tools are meant to show something finished.","position":{"start":{"line":22,"column":1,"offset":3238},"end":{"line":22,"column":131,"offset":3368},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":3238},"end":{"line":22,"column":131,"offset":3368},"indent":[]}},{"type":"jsx","value":"<Asset src={files} alt=\"a giant list of poorly named design files\" />","position":{"start":{"line":24,"column":1,"offset":3370},"end":{"line":24,"column":70,"offset":3439},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two fundamental aspects of the tools we use that need to be in place to support us in our work. ","position":{"start":{"line":26,"column":1,"offset":3441},"end":{"line":26,"column":107,"offset":3547},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Versioning","position":{"start":{"line":26,"column":108,"offset":3548},"end":{"line":26,"column":118,"offset":3558},"indent":[]}}],"position":{"start":{"line":26,"column":107,"offset":3547},"end":{"line":26,"column":119,"offset":3559},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":26,"column":119,"offset":3559},"end":{"line":26,"column":124,"offset":3564},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"branching","position":{"start":{"line":26,"column":125,"offset":3565},"end":{"line":26,"column":134,"offset":3574},"indent":[]}}],"position":{"start":{"line":26,"column":124,"offset":3564},"end":{"line":26,"column":135,"offset":3575},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":26,"column":135,"offset":3575},"end":{"line":26,"column":136,"offset":3576},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":3441},"end":{"line":26,"column":136,"offset":3576},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Versioning is important because every decision we make builds on the last. We steadily gain knowledge and need our tools to reflect that our work changes over time. Our projects, the websites we make, the apps we create, the hot sauce recipe we're working on, they evolve over time. Our tools shouldn't live such a binary ","position":{"start":{"line":28,"column":1,"offset":3578},"end":{"line":28,"column":323,"offset":3900},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"final only","position":{"start":{"line":28,"column":324,"offset":3901},"end":{"line":28,"column":334,"offset":3911},"indent":[]}}],"position":{"start":{"line":28,"column":323,"offset":3900},"end":{"line":28,"column":335,"offset":3912},"indent":[]}},{"type":"text","value":" world.","position":{"start":{"line":28,"column":335,"offset":3912},"end":{"line":28,"column":342,"offset":3919},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":3578},"end":{"line":28,"column":342,"offset":3919},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Branching is also important. Branches are ideas and experiments we run in the hopes that improvements are realized. Some branches are unsuccessful but we've learned something that will inform the next branch we try. Some branches are successful and need to be carried through. This reminds me of the senior designer's process diagram ","position":{"start":{"line":30,"column":1,"offset":3921},"end":{"line":30,"column":335,"offset":4255},"indent":[]}},{"type":"link","title":null,"url":"https://medium.com/the-year-of-the-looking-glass/junior-designers-vs-senior-designers-fbe483d3b51e","children":[{"type":"text","value":"Julie Zhuo made","position":{"start":{"line":30,"column":336,"offset":4256},"end":{"line":30,"column":351,"offset":4271},"indent":[]}}],"position":{"start":{"line":30,"column":335,"offset":4255},"end":{"line":30,"column":452,"offset":4372},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":30,"column":452,"offset":4372},"end":{"line":30,"column":453,"offset":4373},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":3921},"end":{"line":30,"column":453,"offset":4373},"indent":[]}},{"type":"jsx","value":"<Asset src=\"https://miro.medium.com/max/1000/1*v94epVSu0dQIdRXKnT-VSQ.png\" href=\"https://medium.com/the-year-of-the-looking-glass/junior-designers-vs-senior-designers-fbe483d3b51e\" alt=\"senior designer's process\" caption=\"Julie Zhuo's Senior Designers Process\" />","position":{"start":{"line":32,"column":1,"offset":4375},"end":{"line":32,"column":264,"offset":4638},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are some tools out there that do encourage ","position":{"start":{"line":34,"column":1,"offset":4640},"end":{"line":34,"column":50,"offset":4689},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"incrementalness","position":{"start":{"line":34,"column":51,"offset":4690},"end":{"line":34,"column":66,"offset":4705},"indent":[]}}],"position":{"start":{"line":34,"column":50,"offset":4689},"end":{"line":34,"column":67,"offset":4706},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":34,"column":67,"offset":4706},"end":{"line":34,"column":69,"offset":4708},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":34,"column":69,"offset":4708},"end":{"line":34,"column":74,"offset":4713},"indent":[]}},{"type":"text","value":" is a tool for code versioning and branching that is probably the biggest in the space, and is starting to grow in familiarity with designers. ","position":{"start":{"line":34,"column":74,"offset":4713},"end":{"line":34,"column":217,"offset":4856},"indent":[]}},{"type":"link","title":null,"url":"https://www.abstract.com","children":[{"type":"text","value":"Abstract","position":{"start":{"line":34,"column":218,"offset":4857},"end":{"line":34,"column":226,"offset":4865},"indent":[]}}],"position":{"start":{"line":34,"column":217,"offset":4856},"end":{"line":34,"column":253,"offset":4892},"indent":[]}},{"type":"text","value":" is built on top of those ","position":{"start":{"line":34,"column":253,"offset":4892},"end":{"line":34,"column":279,"offset":4918},"indent":[]}},{"type":"inlineCode","value":"git","position":{"start":{"line":34,"column":279,"offset":4918},"end":{"line":34,"column":284,"offset":4923},"indent":[]}},{"type":"text","value":" fundamentals, but with a nice UI specific to Sketch and Adobe XD files. ","position":{"start":{"line":34,"column":284,"offset":4923},"end":{"line":34,"column":357,"offset":4996},"indent":[]}},{"type":"link","title":null,"url":"https://www.figma.com/files/recent","children":[{"type":"text","value":"Figma","position":{"start":{"line":34,"column":358,"offset":4997},"end":{"line":34,"column":363,"offset":5002},"indent":[]}}],"position":{"start":{"line":34,"column":357,"offset":4996},"end":{"line":34,"column":400,"offset":5039},"indent":[]}},{"type":"text","value":" does have versioning as well, but is missing the branching feature. In writing, tools like Confluence, Notion, Google Drive can all version but it's still tedious to explore, test ideas, and look back through history while writing.","position":{"start":{"line":34,"column":400,"offset":5039},"end":{"line":34,"column":632,"offset":5271},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":4640},"end":{"line":34,"column":632,"offset":5271},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Years ago, when I used to do more work with WordPress websites I followed some tools like ","position":{"start":{"line":36,"column":1,"offset":5273},"end":{"line":36,"column":91,"offset":5363},"indent":[]}},{"type":"link","title":null,"url":"https://versionpress.com","children":[{"type":"text","value":"VersionPress","position":{"start":{"line":36,"column":92,"offset":5364},"end":{"line":36,"column":104,"offset":5376},"indent":[]}}],"position":{"start":{"line":36,"column":91,"offset":5363},"end":{"line":36,"column":131,"offset":5403},"indent":[]}},{"type":"text","value":" that would keep your website and content versioned and branchable. This would let you run different urls for production, staging, development, and other environments and experiments you'd like to set up.","position":{"start":{"line":36,"column":131,"offset":5403},"end":{"line":36,"column":335,"offset":5607},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":5273},"end":{"line":36,"column":335,"offset":5607},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":38,"column":1,"offset":5609},"end":{"line":38,"column":4,"offset":5612},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I'm struggling figuring out how to end this. Maybe it will come to me and I'll edit this paragraph. Maybe it'll stay this way forever. Who knows.","position":{"start":{"line":40,"column":1,"offset":5614},"end":{"line":40,"column":146,"offset":5759},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":5614},"end":{"line":40,"column":146,"offset":5759},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Incremental Correctness\"}","position":{"start":{"line":43,"column":1,"offset":5762},"end":{"line":43,"column":64,"offset":5825},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":43,"column":64,"offset":5825}}},"scopeImports":["import { Asset, Link } from 'components';","import files from './files.png';","import mountain from './Mountain_Top.jpg';","import * as React from 'react'"],"scopeIdentifiers":["Asset","Link","files","mountain","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Incremental Correctness\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I was listening to an episode of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://designdetails.fm/episodes/113490\"\n  }), \"Design Details podcast\"), \" where \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/brian_lovin\"\n  }), \"Brian\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/marshallbock\"\n  }), \"Marshall\"), \" interviewed \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/rauchg\"\n  }), \"Guillermo Rauch\"), \". They were talking about an idea of incremental correctness and I had to stop what I was doing and just listen. I\\u2019ve been intimately familiar with this concept for years now but never had such a clear way of articulating it.\"), mdx(\"p\", null, \"In short, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Incremental Correctness\"), \" is not the pursuit of finality, but to be always improving. It\\u2019s against proposing a major redesign (hello design portfolios), instead optimizing what you have. Focus on understanding the space you\\u2019re in, researching problems, experimenting, validating, and shipping small features quickly. When we learn about new problems, we pivot and fix them. Accepting that nothing is ever finished somehow is liberating. It allows you to celebrate each and every win when you make it.\"), mdx(\"p\", null, \"My wife and I do this in our personal lives. When we\\u2019re stuck on a project we tell ourselves \\u201Cwhat is the next right step?\\u201D and do that. She just spent a few months renovating our garage into a beautiful workspace. That project had her (and occasionally me) putting up drywall, painting, running electricity lines, painting, sealing, realigning the garage door, did I say painting? At times it felt like too big of a project, and we almost hired someone to finish, but she kept taking the next right step. We\\u2019ll probably forever find little things to improve, change, and fix, but for now it\\u2019s at a place where we\\u2019re happy and can really enjoy the improved space she created.\"), mdx(\"p\", null, \"I\\u2019ve also used a metaphor of climbing a mountain to describe this concept. You know the goal \", \"\\u2014\", \" it\\u2019s get to the top \", \"\\u2014\", \" but how would you do that? I\\u2019m not much of an outdoorsman, but charging up the mountain in a straight line is probably a very bad idea. Instead you go a little slower. You chart a course to the next safest point to stop and get your bearings. Then chart your next point. And again. And again, until you\\u2019re at the top.\"), mdx(Asset, {\n    src: mountain,\n    alt: \"a person climbing a mountain\",\n    caption: mdx(\"span\", null, \"Illustration by \", mdx(Link, {\n      href: \"//marissaluca.com\",\n      mdxType: \"Link\"\n    }, \"Marissa Felten\")),\n    mdxType: \"Asset\"\n  }), mdx(\"p\", null, \"My work in design systems has taken me down a path of incremental improvement as well. A lot of projects have us roaming around in the dark finding the right balance of standardization and customization. We have components that are used thousands of times across multiple enterprise apps, so completely redoing a component can be incredibly painful for the teams using it to transition to. Deprecation and removal is an incredibly taxing exercise and we need to be cautious about that. So we plan, design, and build features that are the smallest most complete amount of correct we can. As our teams start using them, we learn more and improve them.\"), mdx(\"hr\", null), mdx(\"p\", null, \"I really liked what Brian called out on his \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://brianlovin.com/overthought/incrementally-correct-personal-websites\"\n  }), \"website\"), \".\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u2026our tools don\\u2019t afford incrementally-correct processes.\")), mdx(\"p\", null, \"Just look at all the jokes about design file names and you\\u2019ll immediately see that our tools are meant to show something finished.\"), mdx(Asset, {\n    src: files,\n    alt: \"a giant list of poorly named design files\",\n    mdxType: \"Asset\"\n  }), mdx(\"p\", null, \"There are two fundamental aspects of the tools we use that need to be in place to support us in our work. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Versioning\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"branching\"), \".\"), mdx(\"p\", null, \"Versioning is important because every decision we make builds on the last. We steadily gain knowledge and need our tools to reflect that our work changes over time. Our projects, the websites we make, the apps we create, the hot sauce recipe we\\u2019re working on, they evolve over time. Our tools shouldn\\u2019t live such a binary \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"final only\"), \" world.\"), mdx(\"p\", null, \"Branching is also important. Branches are ideas and experiments we run in the hopes that improvements are realized. Some branches are unsuccessful but we\\u2019ve learned something that will inform the next branch we try. Some branches are successful and need to be carried through. This reminds me of the senior designer\\u2019s process diagram \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/the-year-of-the-looking-glass/junior-designers-vs-senior-designers-fbe483d3b51e\"\n  }), \"Julie Zhuo made\"), \".\"), mdx(Asset, {\n    src: \"https://miro.medium.com/max/1000/1*v94epVSu0dQIdRXKnT-VSQ.png\",\n    href: \"https://medium.com/the-year-of-the-looking-glass/junior-designers-vs-senior-designers-fbe483d3b51e\",\n    alt: \"senior designer's process\",\n    caption: \"Julie Zhuo's Senior Designers Process\",\n    mdxType: \"Asset\"\n  }), mdx(\"p\", null, \"There are some tools out there that do encourage \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"incrementalness\"), \". \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" is a tool for code versioning and branching that is probably the biggest in the space, and is starting to grow in familiarity with designers. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.abstract.com\"\n  }), \"Abstract\"), \" is built on top of those \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git\"), \" fundamentals, but with a nice UI specific to Sketch and Adobe XD files. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.figma.com/files/recent\"\n  }), \"Figma\"), \" does have versioning as well, but is missing the branching feature. In writing, tools like Confluence, Notion, Google Drive can all version but it\\u2019s still tedious to explore, test ideas, and look back through history while writing.\"), mdx(\"p\", null, \"Years ago, when I used to do more work with WordPress websites I followed some tools like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://versionpress.com\"\n  }), \"VersionPress\"), \" that would keep your website and content versioned and branchable. This would let you run different urls for production, staging, development, and other environments and experiments you\\u2019d like to set up.\"), mdx(\"hr\", null), mdx(\"p\", null, \"I\\u2019m struggling figuring out how to end this. Maybe it will come to me and I\\u2019ll edit this paragraph. Maybe it\\u2019ll stay this way forever. Who knows.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Asset, Link } from 'components';\nimport files from './files.png';\nimport mountain from './Mountain_Top.jpg';\nexport const _frontmatter = {\n  \"title\": \"Incremental Correctness\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`I was listening to an episode of `}<a parentName=\"p\" {...{\n        \"href\": \"https://designdetails.fm/episodes/113490\"\n      }}>{`Design Details podcast`}</a>{` where `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/brian_lovin\"\n      }}>{`Brian`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/marshallbock\"\n      }}>{`Marshall`}</a>{` interviewed `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/rauchg\"\n      }}>{`Guillermo Rauch`}</a>{`. They were talking about an idea of incremental correctness and I had to stop what I was doing and just listen. I’ve been intimately familiar with this concept for years now but never had such a clear way of articulating it.`}</p>\n    <p>{`In short, `}<em parentName=\"p\">{`Incremental Correctness`}</em>{` is not the pursuit of finality, but to be always improving. It’s against proposing a major redesign (hello design portfolios), instead optimizing what you have. Focus on understanding the space you’re in, researching problems, experimenting, validating, and shipping small features quickly. When we learn about new problems, we pivot and fix them. Accepting that nothing is ever finished somehow is liberating. It allows you to celebrate each and every win when you make it.`}</p>\n    <p>{`My wife and I do this in our personal lives. When we’re stuck on a project we tell ourselves “what is the next right step?” and do that. She just spent a few months renovating our garage into a beautiful workspace. That project had her (and occasionally me) putting up drywall, painting, running electricity lines, painting, sealing, realigning the garage door, did I say painting? At times it felt like too big of a project, and we almost hired someone to finish, but she kept taking the next right step. We’ll probably forever find little things to improve, change, and fix, but for now it’s at a place where we’re happy and can really enjoy the improved space she created.`}</p>\n    <p>{`I’ve also used a metaphor of climbing a mountain to describe this concept. You know the goal `}{`—`}{` it’s get to the top `}{`—`}{` but how would you do that? I’m not much of an outdoorsman, but charging up the mountain in a straight line is probably a very bad idea. Instead you go a little slower. You chart a course to the next safest point to stop and get your bearings. Then chart your next point. And again. And again, until you’re at the top.`}</p>\n    <Asset src={mountain} alt=\"a person climbing a mountain\" caption={<span>Illustration by <Link href=\"//marissaluca.com\" mdxType=\"Link\">Marissa Felten</Link></span>} mdxType=\"Asset\" />\n    <p>{`My work in design systems has taken me down a path of incremental improvement as well. A lot of projects have us roaming around in the dark finding the right balance of standardization and customization. We have components that are used thousands of times across multiple enterprise apps, so completely redoing a component can be incredibly painful for the teams using it to transition to. Deprecation and removal is an incredibly taxing exercise and we need to be cautious about that. So we plan, design, and build features that are the smallest most complete amount of correct we can. As our teams start using them, we learn more and improve them.`}</p>\n    <hr></hr>\n    <p>{`I really liked what Brian called out on his `}<a parentName=\"p\" {...{\n        \"href\": \"https://brianlovin.com/overthought/incrementally-correct-personal-websites\"\n      }}>{`website`}</a>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`…our tools don’t afford incrementally-correct processes.`}</p>\n    </blockquote>\n    <p>{`Just look at all the jokes about design file names and you’ll immediately see that our tools are meant to show something finished.`}</p>\n    <Asset src={files} alt=\"a giant list of poorly named design files\" mdxType=\"Asset\" />\n    <p>{`There are two fundamental aspects of the tools we use that need to be in place to support us in our work. `}<em parentName=\"p\">{`Versioning`}</em>{` and `}<em parentName=\"p\">{`branching`}</em>{`.`}</p>\n    <p>{`Versioning is important because every decision we make builds on the last. We steadily gain knowledge and need our tools to reflect that our work changes over time. Our projects, the websites we make, the apps we create, the hot sauce recipe we’re working on, they evolve over time. Our tools shouldn’t live such a binary `}<em parentName=\"p\">{`final only`}</em>{` world.`}</p>\n    <p>{`Branching is also important. Branches are ideas and experiments we run in the hopes that improvements are realized. Some branches are unsuccessful but we’ve learned something that will inform the next branch we try. Some branches are successful and need to be carried through. This reminds me of the senior designer’s process diagram `}<a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/the-year-of-the-looking-glass/junior-designers-vs-senior-designers-fbe483d3b51e\"\n      }}>{`Julie Zhuo made`}</a>{`.`}</p>\n    <Asset src=\"https://miro.medium.com/max/1000/1*v94epVSu0dQIdRXKnT-VSQ.png\" href=\"https://medium.com/the-year-of-the-looking-glass/junior-designers-vs-senior-designers-fbe483d3b51e\" alt=\"senior designer's process\" caption=\"Julie Zhuo's Senior Designers Process\" mdxType=\"Asset\" />\n    <p>{`There are some tools out there that do encourage `}<em parentName=\"p\">{`incrementalness`}</em>{`. `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` is a tool for code versioning and branching that is probably the biggest in the space, and is starting to grow in familiarity with designers. `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.abstract.com\"\n      }}>{`Abstract`}</a>{` is built on top of those `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{` fundamentals, but with a nice UI specific to Sketch and Adobe XD files. `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.figma.com/files/recent\"\n      }}>{`Figma`}</a>{` does have versioning as well, but is missing the branching feature. In writing, tools like Confluence, Notion, Google Drive can all version but it’s still tedious to explore, test ideas, and look back through history while writing.`}</p>\n    <p>{`Years ago, when I used to do more work with WordPress websites I followed some tools like `}<a parentName=\"p\" {...{\n        \"href\": \"https://versionpress.com\"\n      }}>{`VersionPress`}</a>{` that would keep your website and content versioned and branchable. This would let you run different urls for production, staging, development, and other environments and experiments you’d like to set up.`}</p>\n    <hr></hr>\n    <p>{`I’m struggling figuring out how to end this. Maybe it will come to me and I’ll edit this paragraph. Maybe it’ll stay this way forever. Who knows.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}