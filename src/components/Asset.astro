---
import cx from 'clsx';
import { Picture } from 'astro:assets';

const {
	alt = '',
	className,
	expand,
	href,
	src,
	fullWidth,
	...props
} = Astro.props;

const classes = cx('Assets', fullWidth && 'Assets--full-width', className);
---

<style>
	div {
		margin: 2em 0;
	}

	.Asset--full-width {
		/* Remove gutters */
		width: 94vw;
	}

	a {
		display: block;
		transition: all 0.1s ease-in-out;

		&:hover {
			transform: scale(1.06);
			box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2);
		}
	}

	img {
		border-style: none;
		display: block;
		height: auto;
		max-width: 100%;
		width: 100%;
		margin: 0;
	}

	video {
		display: block;
		height: auto;
		max-width: 100%;
		width: 100%;
	}

	small {
		display: block;
		margin-top: 1em;

		* {
			margin: 0;
		}
	}
</style>

<div>
	{
		() => {
			const isExtension = (ext: string) => {
				if (typeof src === 'string') return src.endsWith(ext);
				return src.src.endsWith(ext);
			};
			const getLink = () => {
				if (href) return href;
				if (expand) return src;
				return false;
			};

			const getAssetContent = () => {
				if (isExtension('mov'))
					return (
						<video src={src} controls class={classes} {...props}>
							{alt}
						</video>
					);

				if (isExtension('gif'))
					return (
						<img
							src={src.src}
							alt={alt}
							class={classes}
							{...props}
						/>
					);

				return (
					<Picture src={src} alt={alt} class={classes} {...props} />
				);
			};

			if (getLink()) return <a href={getLink()}>{getAssetContent()}</a>;
			return getAssetContent();
		}
	}

	<small><slot /></small>
</div>
