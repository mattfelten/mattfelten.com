---
import { differenceInYears } from 'date-fns';
import { RxArrowTopRight } from 'react-icons/rx';
import { getCollection } from 'astro:content';
import Layout from '../layout/default.astro';
import ConditionalLink from '../components/ConditionalLink.astro';
import List from '../components/List.astro';

const work = (await getCollection('work')).sort(
	(a, b) => b.data.start.valueOf() - a.data.start.valueOf()
);

const workCutoff = 10;
const recentWork = work.filter(
	role =>
		!role.data.end ||
		differenceInYears(new Date(), role.data.end) <= workCutoff
);

const previousWork = work
	.filter(
		({ data: { end } }) =>
			end && differenceInYears(new Date(), end) > workCutoff
	)
	.map(({ data: { company } }) => company)
	.reduce(
		(a, b, i, array) =>
			a + (i < array.length - 1 ? ', ' : ', and ') + b
	);

const posts = (await getCollection('posts')).sort(
	(a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

const speaking = (await getCollection('speaking')).sort(
	(a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);
---

<style>
	.current a,
	.previous a {
		@apply underline underline-offset-4 decoration-2 decoration-accent font-medium hover:decoration-3 whitespace-nowrap text-strong;
	}

	@media (min-width: 1100px) and (max-width: 1310px) {
		.previous {
			max-width: 980px;
		}
	}
</style>
<Layout>
	<section
		class="space-y-2 text-2xl leading-snug mt-7 lg:space-y-2"
	>
		<h1 class="mb-4 text-4xl font-bold text-strong">
			Matt Felten
		</h1>
		<p class="current">
			Currently I lead design and frontend engineering at <a
				href="//missioncloud.com">Mission Cloud</a
			>.
		</p>
		<p class="previous">
			Previously I lead teams and design systems at <a
				href="//servicetitan.com">ServiceTitan</a
			>, <a href="//youcaring.com">YouCaring</a>, & <a
				href="//dreamhost.com">DreamHost</a
			>
		</p>
	</section>
	<section>
		<h3 class="mb-1 font-medium text-subdued">Roles</h3>
		<ol class="space-y-5">
			{
				recentWork.map(
					({
						data: { company, start, end, role, website },
					}) => {
						const rangeStart = new Date(
							start
						).getUTCFullYear();
						const rangeEnd = end
							? new Date(end).getUTCFullYear()
							: 'Now';
						return (
							<li class="flex">
								<ConditionalLink
									href={website}
									class="group"
								>
									<h4 class="text-2xl">
										<span>
											<span class="font-medium">
												{role}
											</span>
											<span class="px-0.5 text-subdued">
												at
											</span>
											<span class="font-medium">
												{company}
											</span>
										</span>
										{website && (
											<span class="group-hover:text-accent text-weak ml-0.5 transition text-xl">
												<RxArrowTopRight className="inline-block align-baseline" />
											</span>
										)}
									</h4>
									<time
										class="block text-subdued font-medium text-md"
										datetime={start.toISOString()}
									>
										{rangeStart} â€” {rangeEnd}
									</time>
								</ConditionalLink>
							</li>
						);
					}
				)
			}
		</ol>
		<p class="mt-3 font-medium text-subdued">
			Previously a designer at {previousWork}.
		</p>
	</section>
	<List list={posts} title="Writing" />
	<List list={speaking} title="Speaking" />
</Layout>
